{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\OneDrive\\\\Desktop\\\\Final\\\\Ship-Management\\\\src\\\\pages\\\\DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { JobsStatusChart, MaintenanceStatusChart } from '../components/Dashboard/Charts';\nimport KPICards from '../components/Dashboard/KPICards';\nimport Footer from '../components/Footer';\nimport './DashboardPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  // State management\n  const [dashboardData, setDashboardData] = useState({\n    stats: {\n      totalShips: 5,\n      overdueMaintenance: 3,\n      jobsInProgress: 2,\n      jobsCompleted: 1,\n      highPriorityJobs: 3\n    },\n    charts: {\n      jobsStatus: {\n        inProgress: 2,\n        completed: 1\n      },\n      maintenanceStatus: {\n        overdue: 3,\n        onSchedule: 2\n      }\n    },\n    recentActivities: [{\n      id: 1,\n      ship: \"Ocean Voyager\",\n      component: \"Engine\",\n      action: \"Routine inspection\",\n      status: \"in-progress\",\n      priority: \"high\",\n      timestamp: \"2025-05-12T10:30:00\"\n    }, {\n      id: 2,\n      ship: \"Pacific Star\",\n      component: \"Navigation\",\n      action: \"GPS calibration\",\n      status: \"completed\",\n      priority: \"medium\",\n      timestamp: \"2025-05-11T14:15:00\"\n    }],\n    ships: [\"Ocean Voyager\", \"Pacific Star\", \"Atlantic Explorer\", \"Northern Light\", \"Southern Cross\"]\n  });\n  const [loading, setLoading] = useState(false);\n  const [filters, setFilters] = useState({\n    timeRange: 'month',\n    shipType: 'all',\n    priority: 'all'\n  });\n  const handleRefresh = () => {\n    setLoading(true);\n    // Simulate refresh without logout\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  };\n  const handleViewUpdate = (activityId, action) => {\n    // Handle view/update action\n    console.log(`${action} activity ${activityId}`);\n    // In a real app, this would navigate or show a modal\n    alert(`${action} activity ${activityId}`);\n  };\n  const formatTimeAgo = timestamp => {\n    const now = new Date();\n    const date = new Date(timestamp);\n    const diffHours = Math.floor((now - date) / (1000 * 60 * 60));\n    if (diffHours < 24) return `${diffHours} ${diffHours === 1 ? 'hour' : 'hours'} ago`;\n    const days = Math.floor(diffHours / 24);\n    return `${days} ${days === 1 ? 'day' : 'days'} ago`;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-spinner\",\n    children: \"Refreshing Data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 23\n  }, this);\n\n  // Footer.jsx\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(KPICards, {\n      stats: dashboardData.stats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-container\",\n      children: [/*#__PURE__*/_jsxDEV(JobsStatusChart, {\n        data: dashboardData.charts.jobsStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MaintenanceStatusChart, {\n        data: dashboardData.charts.maintenanceStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"x7qiLNNnBmL2nJDBIabtoapcqbs=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","JobsStatusChart","MaintenanceStatusChart","KPICards","Footer","jsxDEV","_jsxDEV","DashboardPage","_s","dashboardData","setDashboardData","stats","totalShips","overdueMaintenance","jobsInProgress","jobsCompleted","highPriorityJobs","charts","jobsStatus","inProgress","completed","maintenanceStatus","overdue","onSchedule","recentActivities","id","ship","component","action","status","priority","timestamp","ships","loading","setLoading","filters","setFilters","timeRange","shipType","handleRefresh","setTimeout","handleViewUpdate","activityId","console","log","alert","formatTimeAgo","now","Date","date","diffHours","Math","floor","days","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["C:/Users/prati/OneDrive/Desktop/Final/Ship-Management/src/pages/DashboardPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { JobsStatusChart, MaintenanceStatusChart } from '../components/Dashboard/Charts';\r\nimport KPICards from '../components/Dashboard/KPICards';\r\nimport Footer from '../components/Footer';\r\nimport './DashboardPage.css';\r\n\r\nconst DashboardPage = () => {\r\n  // State management\r\n  const [dashboardData, setDashboardData] = useState({\r\n    stats: {\r\n      totalShips: 5,\r\n      overdueMaintenance: 3,\r\n      jobsInProgress: 2,\r\n      jobsCompleted: 1,\r\n      highPriorityJobs: 3\r\n    },\r\n    charts: {\r\n      jobsStatus: {\r\n        inProgress: 2,\r\n        completed: 1\r\n      },\r\n      maintenanceStatus: {\r\n        overdue: 3,\r\n        onSchedule: 2\r\n      }\r\n    },\r\n    recentActivities: [\r\n      {\r\n        id: 1,\r\n        ship: \"Ocean Voyager\",\r\n        component: \"Engine\",\r\n        action: \"Routine inspection\",\r\n        status: \"in-progress\",\r\n        priority: \"high\",\r\n        timestamp: \"2025-05-12T10:30:00\"\r\n      },\r\n      {\r\n        id: 2,\r\n        ship: \"Pacific Star\",\r\n        component: \"Navigation\",\r\n        action: \"GPS calibration\",\r\n        status: \"completed\",\r\n        priority: \"medium\",\r\n        timestamp: \"2025-05-11T14:15:00\"\r\n      }\r\n    ],\r\n    ships: [\"Ocean Voyager\", \"Pacific Star\", \"Atlantic Explorer\", \"Northern Light\", \"Southern Cross\"]\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    timeRange: 'month',\r\n    shipType: 'all',\r\n    priority: 'all'\r\n  });\r\n\r\n  const handleRefresh = () => {\r\n    setLoading(true);\r\n    // Simulate refresh without logout\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleViewUpdate = (activityId, action) => {\r\n    // Handle view/update action\r\n    console.log(`${action} activity ${activityId}`);\r\n    // In a real app, this would navigate or show a modal\r\n    alert(`${action} activity ${activityId}`);\r\n  };\r\n\r\n  const formatTimeAgo = (timestamp) => {\r\n    const now = new Date();\r\n    const date = new Date(timestamp);\r\n    const diffHours = Math.floor((now - date) / (1000 * 60 * 60));\r\n    \r\n    if (diffHours < 24) return `${diffHours} ${diffHours === 1 ? 'hour' : 'hours'} ago`;\r\n    const days = Math.floor(diffHours / 24);\r\n    return `${days} ${days === 1 ? 'day' : 'days'} ago`;\r\n  };\r\n\r\n  if (loading) return <div className=\"loading-spinner\">Refreshing Data...</div>;\r\n\r\n  // Footer.jsx\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <KPICards stats={dashboardData.stats} />\r\n      <div className=\"charts-container\">\r\n        <JobsStatusChart data={dashboardData.charts.jobsStatus} />\r\n        <MaintenanceStatusChart data={dashboardData.charts.maintenanceStatus} />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,sBAAsB,QAAQ,gCAAgC;AACxF,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC;IACjDY,KAAK,EAAE;MACLC,UAAU,EAAE,CAAC;MACbC,kBAAkB,EAAE,CAAC;MACrBC,cAAc,EAAE,CAAC;MACjBC,aAAa,EAAE,CAAC;MAChBC,gBAAgB,EAAE;IACpB,CAAC;IACDC,MAAM,EAAE;MACNC,UAAU,EAAE;QACVC,UAAU,EAAE,CAAC;QACbC,SAAS,EAAE;MACb,CAAC;MACDC,iBAAiB,EAAE;QACjBC,OAAO,EAAE,CAAC;QACVC,UAAU,EAAE;MACd;IACF,CAAC;IACDC,gBAAgB,EAAE,CAChB;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,eAAe;MACrBC,SAAS,EAAE,QAAQ;MACnBC,MAAM,EAAE,oBAAoB;MAC5BC,MAAM,EAAE,aAAa;MACrBC,QAAQ,EAAE,MAAM;MAChBC,SAAS,EAAE;IACb,CAAC,EACD;MACEN,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,cAAc;MACpBC,SAAS,EAAE,YAAY;MACvBC,MAAM,EAAE,iBAAiB;MACzBC,MAAM,EAAE,WAAW;MACnBC,QAAQ,EAAE,QAAQ;MAClBC,SAAS,EAAE;IACb,CAAC,CACF;IACDC,KAAK,EAAE,CAAC,eAAe,EAAE,cAAc,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,gBAAgB;EAClG,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC;IACrCsC,SAAS,EAAE,OAAO;IAClBC,QAAQ,EAAE,KAAK;IACfR,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1BL,UAAU,CAAC,IAAI,CAAC;IAChB;IACAM,UAAU,CAAC,MAAM;MACfN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAACC,UAAU,EAAEd,MAAM,KAAK;IAC/C;IACAe,OAAO,CAACC,GAAG,CAAC,GAAGhB,MAAM,aAAac,UAAU,EAAE,CAAC;IAC/C;IACAG,KAAK,CAAC,GAAGjB,MAAM,aAAac,UAAU,EAAE,CAAC;EAC3C,CAAC;EAED,MAAMI,aAAa,GAAIf,SAAS,IAAK;IACnC,MAAMgB,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,IAAI,GAAG,IAAID,IAAI,CAACjB,SAAS,CAAC;IAChC,MAAMmB,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACL,GAAG,GAAGE,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAE7D,IAAIC,SAAS,GAAG,EAAE,EAAE,OAAO,GAAGA,SAAS,IAAIA,SAAS,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO,MAAM;IACnF,MAAMG,IAAI,GAAGF,IAAI,CAACC,KAAK,CAACF,SAAS,GAAG,EAAE,CAAC;IACvC,OAAO,GAAGG,IAAI,IAAIA,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,MAAM,MAAM;EACrD,CAAC;EAED,IAAIpB,OAAO,EAAE,oBAAO3B,OAAA;IAAKgD,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAAC;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAE7E;EACA,oBACErD,OAAA;IAAKgD,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjD,OAAA,CAACH,QAAQ;MAACQ,KAAK,EAAEF,aAAa,CAACE;IAAM;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxCrD,OAAA;MAAKgD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BjD,OAAA,CAACL,eAAe;QAAC2D,IAAI,EAAEnD,aAAa,CAACQ,MAAM,CAACC;MAAW;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DrD,OAAA,CAACJ,sBAAsB;QAAC0D,IAAI,EAAEnD,aAAa,CAACQ,MAAM,CAACI;MAAkB;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACNrD,OAAA,CAACF,MAAM;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACnD,EAAA,CAxFID,aAAa;AAAAsD,EAAA,GAAbtD,aAAa;AA0FnB,eAAeA,aAAa;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}