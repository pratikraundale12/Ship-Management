{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\OneDrive\\\\Desktop\\\\Assignment_ENTNT\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Hardcoded users\nconst USERS = [{\n  email: 'admin@example.com',\n  password: 'admin123',\n  role: 'Admin'\n}, {\n  email: 'inspector@example.com',\n  password: 'inspector123',\n  role: 'Inspector'\n}, {\n  email: 'engineer@example.com',\n  password: 'engineer123',\n  role: 'Engineer'\n}];\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const login = (email, password) => {\n    const found = USERS.find(u => u.email === email && u.password === password);\n    if (found) {\n      setUser({\n        email: found.email,\n        role: found.role\n      });\n      setError(null);\n      return true;\n    } else {\n      setError('Invalid credentials');\n      return false;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"v7rnY3wB8K8bJ5T16BSeNVjHHLs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n\n// Role-based access control component\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const RequireRole = ({\n  allowedRoles,\n  children\n}) => {\n  _s3();\n  const {\n    user\n  } = useAuth();\n  if (!user || allowedRoles && !allowedRoles.includes(user.role)) {\n    return null;\n  }\n  return children;\n};\n_s3(RequireRole, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n_c2 = RequireRole;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthProvider\");\n$RefreshReg$(_c2, \"RequireRole\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","USERS","email","password","role","AuthProvider","children","_s","user","setUser","error","setError","login","found","find","u","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","RequireRole","allowedRoles","_s3","includes","_c2","$RefreshReg$"],"sources":["C:/Users/prati/OneDrive/Desktop/Assignment_ENTNT/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\n// Hardcoded users\r\nconst USERS = [\r\n  { email: 'admin@example.com', password: 'admin123', role: 'Admin' },\r\n  { email: 'inspector@example.com', password: 'inspector123', role: 'Inspector' },\r\n  { email: 'engineer@example.com', password: 'engineer123', role: 'Engineer' },\r\n];\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const login = (email, password) => {\r\n    const found = USERS.find(u => u.email === email && u.password === password);\r\n    if (found) {\r\n      setUser({ email: found.email, role: found.role });\r\n      setError(null);\r\n      return true;\r\n    } else {\r\n      setError('Invalid credentials');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, error }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// Role-based access control component\r\nexport const RequireRole = ({ allowedRoles, children }) => {\r\n  const { user } = useAuth();\r\n  if (!user || (allowedRoles && !allowedRoles.includes(user.role))) {\r\n    return null;\r\n  }\r\n  return children;\r\n}; "],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;;AAEvC;AACA,MAAMM,KAAK,GAAG,CACZ;EAAEC,KAAK,EAAE,mBAAmB;EAAEC,QAAQ,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAQ,CAAC,EACnE;EAAEF,KAAK,EAAE,uBAAuB;EAAEC,QAAQ,EAAE,cAAc;EAAEC,IAAI,EAAE;AAAY,CAAC,EAC/E;EAAEF,KAAK,EAAE,sBAAsB;EAAEC,QAAQ,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAW,CAAC,CAC7E;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,KAAK,GAAGA,CAACV,KAAK,EAAEC,QAAQ,KAAK;IACjC,MAAMU,KAAK,GAAGZ,KAAK,CAACa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACb,KAAK,KAAKA,KAAK,IAAIa,CAAC,CAACZ,QAAQ,KAAKA,QAAQ,CAAC;IAC3E,IAAIU,KAAK,EAAE;MACTJ,OAAO,CAAC;QAAEP,KAAK,EAAEW,KAAK,CAACX,KAAK;QAAEE,IAAI,EAAES,KAAK,CAACT;MAAK,CAAC,CAAC;MACjDO,QAAQ,CAAC,IAAI,CAAC;MACd,OAAO,IAAI;IACb,CAAC,MAAM;MACLA,QAAQ,CAAC,qBAAqB,CAAC;MAC/B,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBP,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEV,IAAI;MAAEI,KAAK;MAAEI,MAAM;MAAEN;IAAM,CAAE;IAAAJ,QAAA,EACzDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,EAAA,CAzBWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AA2BzB,OAAO,MAAMmB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM7B,UAAU,CAACI,WAAW,CAAC;AAAA;;AAEpD;AAAAyB,GAAA,CAFaD,OAAO;AAGpB,OAAO,MAAME,WAAW,GAAGA,CAAC;EAAEC,YAAY;EAAErB;AAAS,CAAC,KAAK;EAAAsB,GAAA;EACzD,MAAM;IAAEpB;EAAK,CAAC,GAAGgB,OAAO,CAAC,CAAC;EAC1B,IAAI,CAAChB,IAAI,IAAKmB,YAAY,IAAI,CAACA,YAAY,CAACE,QAAQ,CAACrB,IAAI,CAACJ,IAAI,CAAE,EAAE;IAChE,OAAO,IAAI;EACb;EACA,OAAOE,QAAQ;AACjB,CAAC;AAACsB,GAAA,CANWF,WAAW;EAAA,QACLF,OAAO;AAAA;AAAAM,GAAA,GADbJ,WAAW;AAAA,IAAAH,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}