{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\OneDrive\\\\Desktop\\\\Assignment_ENTNT\\\\src\\\\contexts\\\\JobsContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShipsContext = /*#__PURE__*/createContext(null);\nexport const ShipsProvider = ({\n  children\n}) => {\n  _s();\n  const [ships, setShips] = useState([{\n    id: 1,\n    name: \"Ever Given\",\n    imoNumber: \"9811000\",\n    flag: \"Panama\",\n    status: \"Active\",\n    lastMaintenance: \"2023-12-01\",\n    nextMaintenance: \"2024-06-01\",\n    description: \"Large container ship that blocked the Suez Canal in 2021.\"\n  }, {\n    id: 2,\n    name: \"Queen Mary 2\",\n    imoNumber: \"9241061\",\n    flag: \"UK\",\n    status: \"Maintenance\",\n    lastMaintenance: \"2023-10-15\",\n    nextMaintenance: \"2024-04-15\",\n    description: \"Famous British ocean liner, flagship of the Cunard Line.\"\n  }, {\n    id: 3,\n    name: \"Ocean Voyager\",\n    imoNumber: \"9345678\",\n    flag: \"Liberia\",\n    status: \"Active\",\n    lastMaintenance: \"2023-11-20\",\n    nextMaintenance: \"2024-05-20\",\n    description: \"Large container vessel operating in Pacific routes.\"\n  }, {\n    id: 4,\n    name: \"Pacific Star\",\n    imoNumber: \"9456789\",\n    flag: \"Marshall Islands\",\n    status: \"Active\",\n    lastMaintenance: \"2023-09-10\",\n    nextMaintenance: \"2024-03-10\",\n    description: \"Bulk carrier specializing in grain transport.\"\n  }, {\n    id: 5,\n    name: \"Atlantic Explorer\",\n    imoNumber: \"9567890\",\n    flag: \"Malta\",\n    status: \"Active\",\n    lastMaintenance: \"2023-08-05\",\n    nextMaintenance: \"2024-02-05\",\n    description: \"Oil tanker servicing transatlantic routes.\"\n  }, {\n    id: 6,\n    name: \"Marine Spirit\",\n    imoNumber: \"9678901\",\n    flag: \"Bahamas\",\n    status: \"Docked\",\n    lastMaintenance: \"2023-07-15\",\n    nextMaintenance: \"2024-01-15\",\n    description: \"LNG carrier with advanced environmental systems.\"\n  }]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchShips = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      // TODO: Implement actual API call\n      // const response = await fetch('/api/ships');\n      // const data = await response.json();\n      // setShips(data);\n      console.log(\"Fetch ships functionality would run here\");\n    } catch (err) {\n      setError(err.message);\n      console.error(\"Failed to fetch ships:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getShipById = id => {\n    return ships.find(ship => ship.id === id);\n  };\n  const addShip = async shipData => {\n    try {\n      setLoading(true);\n      // TODO: Implement actual API call\n      // await fetch('/api/ships', { method: 'POST', body: JSON.stringify(shipData) });\n      const newShip = {\n        ...shipData,\n        id: Math.max(...ships.map(s => s.id)) + 1 // Generate new ID\n      };\n      setShips(prev => [...prev, newShip]);\n      return newShip;\n    } catch (err) {\n      setError(err.message);\n      console.error(\"Failed to add ship:\", err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateShip = async (id, shipData) => {\n    try {\n      setLoading(true);\n      // TODO: Implement actual API call\n      // await fetch(`/api/ships/${id}`, { method: 'PUT', body: JSON.stringify(shipData) });\n      setShips(prev => prev.map(ship => ship.id === id ? {\n        ...ship,\n        ...shipData\n      } : ship));\n      return shipData;\n    } catch (err) {\n      setError(err.message);\n      console.error(\"Failed to update ship:\", err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteShip = async id => {\n    try {\n      setLoading(true);\n      // TODO: Implement actual API call\n      // await fetch(`/api/ships/${id}`, { method: 'DELETE' });\n      setShips(prev => prev.filter(ship => ship.id !== id));\n    } catch (err) {\n      setError(err.message);\n      console.error(\"Failed to delete ship:\", err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    ships,\n    loading,\n    error,\n    fetchShips,\n    getShipById,\n    addShip,\n    updateShip,\n    deleteShip\n  };\n  return /*#__PURE__*/_jsxDEV(ShipsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(ShipsProvider, \"wnYtQs84pp8DbutD0KIQXugJEy4=\");\n_c = ShipsProvider;\nexport const useShips = () => {\n  _s2();\n  const context = useContext(ShipsContext);\n  if (!context) {\n    throw new Error('useShips must be used within a ShipsProvider');\n  }\n  return context;\n};\n_s2(useShips, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ShipsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ShipsContext","ShipsProvider","children","_s","ships","setShips","id","name","imoNumber","flag","status","lastMaintenance","nextMaintenance","description","loading","setLoading","error","setError","fetchShips","console","log","err","message","getShipById","find","ship","addShip","shipData","newShip","Math","max","map","s","prev","updateShip","deleteShip","filter","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useShips","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/prati/OneDrive/Desktop/Assignment_ENTNT/src/contexts/JobsContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst ShipsContext = createContext(null);\r\n\r\nexport const ShipsProvider = ({ children }) => {\r\n  const [ships, setShips] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"Ever Given\",\r\n      imoNumber: \"9811000\",\r\n      flag: \"Panama\",\r\n      status: \"Active\",\r\n      lastMaintenance: \"2023-12-01\",\r\n      nextMaintenance: \"2024-06-01\",\r\n      description: \"Large container ship that blocked the Suez Canal in 2021.\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Queen Mary 2\",\r\n      imoNumber: \"9241061\",\r\n      flag: \"UK\",\r\n      status: \"Maintenance\",\r\n      lastMaintenance: \"2023-10-15\",\r\n      nextMaintenance: \"2024-04-15\",\r\n      description: \"Famous British ocean liner, flagship of the Cunard Line.\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Ocean Voyager\",\r\n      imoNumber: \"9345678\",\r\n      flag: \"Liberia\",\r\n      status: \"Active\",\r\n      lastMaintenance: \"2023-11-20\",\r\n      nextMaintenance: \"2024-05-20\",\r\n      description: \"Large container vessel operating in Pacific routes.\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Pacific Star\",\r\n      imoNumber: \"9456789\",\r\n      flag: \"Marshall Islands\",\r\n      status: \"Active\",\r\n      lastMaintenance: \"2023-09-10\",\r\n      nextMaintenance: \"2024-03-10\",\r\n      description: \"Bulk carrier specializing in grain transport.\"\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Atlantic Explorer\",\r\n      imoNumber: \"9567890\",\r\n      flag: \"Malta\",\r\n      status: \"Active\",\r\n      lastMaintenance: \"2023-08-05\",\r\n      nextMaintenance: \"2024-02-05\",\r\n      description: \"Oil tanker servicing transatlantic routes.\"\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Marine Spirit\",\r\n      imoNumber: \"9678901\",\r\n      flag: \"Bahamas\",\r\n      status: \"Docked\",\r\n      lastMaintenance: \"2023-07-15\",\r\n      nextMaintenance: \"2024-01-15\",\r\n      description: \"LNG carrier with advanced environmental systems.\"\r\n    }\r\n  ]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchShips = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      // TODO: Implement actual API call\r\n      // const response = await fetch('/api/ships');\r\n      // const data = await response.json();\r\n      // setShips(data);\r\n      console.log(\"Fetch ships functionality would run here\");\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error(\"Failed to fetch ships:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getShipById = (id) => {\r\n    return ships.find(ship => ship.id === id);\r\n  };\r\n\r\n  const addShip = async (shipData) => {\r\n    try {\r\n      setLoading(true);\r\n      // TODO: Implement actual API call\r\n      // await fetch('/api/ships', { method: 'POST', body: JSON.stringify(shipData) });\r\n      const newShip = {\r\n        ...shipData,\r\n        id: Math.max(...ships.map(s => s.id)) + 1 // Generate new ID\r\n      };\r\n      setShips(prev => [...prev, newShip]);\r\n      return newShip;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error(\"Failed to add ship:\", err);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateShip = async (id, shipData) => {\r\n    try {\r\n      setLoading(true);\r\n      // TODO: Implement actual API call\r\n      // await fetch(`/api/ships/${id}`, { method: 'PUT', body: JSON.stringify(shipData) });\r\n      setShips(prev => prev.map(ship => \r\n        ship.id === id ? { ...ship, ...shipData } : ship\r\n      ));\r\n      return shipData;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error(\"Failed to update ship:\", err);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const deleteShip = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      // TODO: Implement actual API call\r\n      // await fetch(`/api/ships/${id}`, { method: 'DELETE' });\r\n      setShips(prev => prev.filter(ship => ship.id !== id));\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error(\"Failed to delete ship:\", err);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    ships,\r\n    loading,\r\n    error,\r\n    fetchShips,\r\n    getShipById,\r\n    addShip,\r\n    updateShip,\r\n    deleteShip\r\n  };\r\n\r\n  return (\r\n    <ShipsContext.Provider value={value}>\r\n      {children}\r\n    </ShipsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useShips = () => {\r\n  const context = useContext(ShipsContext);\r\n  if (!context) {\r\n    throw new Error('useShips must be used within a ShipsProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}