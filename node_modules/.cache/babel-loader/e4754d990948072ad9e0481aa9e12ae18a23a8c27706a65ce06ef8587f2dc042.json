{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\OneDrive\\\\Desktop\\\\Final\\\\Ship-Management\\\\src\\\\pages\\\\MaintenanceCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { format, startOfWeek, addDays, startOfMonth, endOfMonth, endOfWeek, isSameMonth, isSameDay, parseISO } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaintenanceCalendar = ({\n  jobs = []\n}) => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [viewMode, setViewMode] = useState('month');\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  // Get the date range for the current view\n  const getDateRange = () => {\n    const start = viewMode === 'month' ? startOfWeek(startOfMonth(currentDate)) : startOfWeek(currentDate);\n    const end = viewMode === 'month' ? endOfWeek(endOfMonth(currentDate)) : endOfWeek(currentDate);\n    const range = [];\n    let currentDay = start;\n    while (currentDay <= end) {\n      range.push(currentDay);\n      currentDay = addDays(currentDay, 1);\n    }\n    return range;\n  };\n\n  // Navigation functions\n  const navigatePrevious = () => {\n    setCurrentDate(addDays(currentDate, viewMode === 'month' ? -30 : -7));\n  };\n  const navigateToday = () => {\n    setCurrentDate(new Date());\n    setSelectedDate(new Date());\n  };\n  const navigateNext = () => {\n    setCurrentDate(addDays(currentDate, viewMode === 'month' ? 30 : 7));\n  };\n\n  // Get jobs for a specific date\n  const getJobsForDate = date => {\n    return jobs.filter(job => isSameDay(parseISO(job.startDate), date));\n  };\n\n  // Calendar header with navigation\n  const CalendarHeader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: navigatePrevious,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: navigateToday,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: navigateNext,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: viewMode === 'month' ? format(currentDate, 'MMMM yyyy') : `${format(startOfWeek(currentDate), 'MMM d')} - ${format(endOfWeek(currentDate), 'MMM d, yyyy')}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === 'month' ? 'active' : '',\n        onClick: () => setViewMode('month'),\n        children: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === 'week' ? 'active' : '',\n        onClick: () => setViewMode('week'),\n        children: \"Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n\n  // Day names header\n  const DayNames = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-names\",\n    children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: day\n    }, day, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n\n  // Calendar cells\n  const CalendarCells = () => {\n    const dateRange = getDateRange();\n    const monthStart = startOfMonth(currentDate);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: dateRange.map((day, i) => {\n        const dayJobs = getJobsForDate(day);\n        const isCurrentMonth = isSameMonth(day, monthStart);\n        const isToday = isSameDay(day, new Date());\n        const isSelected = isSameDay(day, selectedDate);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `calendar-cell ${isCurrentMonth ? '' : 'other-month'} ${isToday ? 'today' : ''} ${isSelected ? 'selected' : ''}`,\n          onClick: () => setSelectedDate(day),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-number\",\n            children: format(day, 'd')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-jobs\",\n            children: [dayJobs.slice(0, 2).map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `job-pill priority-${job.priority.toLowerCase()}`,\n              children: job.component\n            }, job.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)), dayJobs.length > 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"more-jobs\",\n              children: [\"+\", dayJobs.length - 2, \" more\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Selected date jobs panel\n  const SelectedDateJobs = () => {\n    const selectedJobs = getJobsForDate(selectedDate);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-jobs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Jobs for \", format(selectedDate, 'MMMM d, yyyy')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), selectedJobs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-list\",\n        children: selectedJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"job-type\",\n              children: job.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `job-priority priority-${job.priority.toLowerCase()}`,\n              children: job.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Ship:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 24\n              }, this), \" \", job.ship]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Component:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 24\n              }, this), \" \", job.component]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Assigned To:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 24\n              }, this), \" \", job.assignedTo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-jobs\",\n        children: \"No jobs scheduled for this date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"maintenance-calendar\",\n    children: [/*#__PURE__*/_jsxDEV(CalendarHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DayNames, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarCells, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectedDateJobs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n// CSS Styles (should be in a separate CSS file)\n_s(MaintenanceCalendar, \"doA/x4MkVxuytUfh5ibfVh996DU=\");\n_c = MaintenanceCalendar;\nconst styles = `\n  .maintenance-calendar {\n    max-width: 1000px;\n    margin: 0 auto;\n    font-family: Arial, sans-serif;\n  }\n\n  .calendar-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n  }\n\n  .nav-buttons button, .view-toggle button {\n    padding: 5px 10px;\n    margin-right: 5px;\n    border: 1px solid #ddd;\n    background: white;\n    cursor: pointer;\n  }\n\n  .view-toggle button.active {\n    background: #3498db;\n    color: white;\n    border-color: #3498db;\n  }\n\n  .day-names {\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n    text-align: center;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n\n  .calendar-grid {\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n    gap: 5px;\n  }\n\n  .calendar-cell {\n    min-height: 100px;\n    padding: 5px;\n    border: 1px solid #eee;\n    background: white;\n    cursor: pointer;\n  }\n\n  .calendar-cell.other-month {\n    background: #f9f9f9;\n    color: #aaa;\n  }\n\n  .calendar-cell.today {\n    border: 2px solid #e74c3c;\n  }\n\n  .calendar-cell.selected {\n    background: #e3f2fd;\n  }\n\n  .day-number {\n    font-weight: bold;\n    margin-bottom: 5px;\n  }\n\n  .job-pill {\n    font-size: 12px;\n    padding: 2px 5px;\n    margin-bottom: 2px;\n    border-radius: 3px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .priority-high { background: #f8d7da; color: #721c24; }\n  .priority-medium { background: #fff3cd; color: #856404; }\n  .priority-low { background: #d4edda; color: #155724; }\n\n  .more-jobs {\n    font-size: 12px;\n    color: #3498db;\n  }\n\n  .selected-jobs {\n    margin-top: 30px;\n    padding-top: 20px;\n    border-top: 1px solid #eee;\n  }\n\n  .job-list {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 15px;\n    margin-top: 15px;\n  }\n\n  .job-card {\n    padding: 15px;\n    border: 1px solid #eee;\n    border-radius: 5px;\n    background: white;\n  }\n\n  .job-header {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 10px;\n  }\n\n  .job-type {\n    font-weight: bold;\n  }\n\n  .no-jobs {\n    color: #7f8c8d;\n    font-style: italic;\n  }\n`;\n\n// Add styles to the document\nconst styleElement = document.createElement('style');\nstyleElement.textContent = styles;\ndocument.head.appendChild(styleElement);\nexport default MaintenanceCalendar;\nvar _c;\n$RefreshReg$(_c, \"MaintenanceCalendar\");","map":{"version":3,"names":["React","useState","format","startOfWeek","addDays","startOfMonth","endOfMonth","endOfWeek","isSameMonth","isSameDay","parseISO","jsxDEV","_jsxDEV","MaintenanceCalendar","jobs","_s","currentDate","setCurrentDate","Date","viewMode","setViewMode","selectedDate","setSelectedDate","getDateRange","start","end","range","currentDay","push","navigatePrevious","navigateToday","navigateNext","getJobsForDate","date","filter","job","startDate","CalendarHeader","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","DayNames","map","day","CalendarCells","dateRange","monthStart","i","dayJobs","isCurrentMonth","isToday","isSelected","slice","priority","toLowerCase","component","id","length","SelectedDateJobs","selectedJobs","type","ship","assignedTo","_c","styles","styleElement","document","createElement","textContent","head","appendChild","$RefreshReg$"],"sources":["C:/Users/prati/OneDrive/Desktop/Final/Ship-Management/src/pages/MaintenanceCalendar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { format, startOfWeek, addDays, startOfMonth, endOfMonth, endOfWeek, isSameMonth, isSameDay, parseISO } from 'date-fns';\r\n\r\nconst MaintenanceCalendar = ({ jobs = [] }) => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [viewMode, setViewMode] = useState('month');\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  // Get the date range for the current view\r\n  const getDateRange = () => {\r\n    const start = viewMode === 'month' \r\n      ? startOfWeek(startOfMonth(currentDate))\r\n      : startOfWeek(currentDate);\r\n    \r\n    const end = viewMode === 'month'\r\n      ? endOfWeek(endOfMonth(currentDate))\r\n      : endOfWeek(currentDate);\r\n\r\n    const range = [];\r\n    let currentDay = start;\r\n\r\n    while (currentDay <= end) {\r\n      range.push(currentDay);\r\n      currentDay = addDays(currentDay, 1);\r\n    }\r\n\r\n    return range;\r\n  };\r\n\r\n  // Navigation functions\r\n  const navigatePrevious = () => {\r\n    setCurrentDate(addDays(currentDate, viewMode === 'month' ? -30 : -7));\r\n  };\r\n\r\n  const navigateToday = () => {\r\n    setCurrentDate(new Date());\r\n    setSelectedDate(new Date());\r\n  };\r\n\r\n  const navigateNext = () => {\r\n    setCurrentDate(addDays(currentDate, viewMode === 'month' ? 30 : 7));\r\n  };\r\n\r\n  // Get jobs for a specific date\r\n  const getJobsForDate = (date) => {\r\n    return jobs.filter(job => isSameDay(parseISO(job.startDate), date));\r\n  };\r\n\r\n  // Calendar header with navigation\r\n  const CalendarHeader = () => (\r\n    <div className=\"calendar-header\">\r\n      <div className=\"nav-buttons\">\r\n        <button onClick={navigatePrevious}>&lt;</button>\r\n        <button onClick={navigateToday}>Today</button>\r\n        <button onClick={navigateNext}>&gt;</button>\r\n      </div>\r\n      <h2>\r\n        {viewMode === 'month' \r\n          ? format(currentDate, 'MMMM yyyy') \r\n          : `${format(startOfWeek(currentDate), 'MMM d')} - ${format(endOfWeek(currentDate), 'MMM d, yyyy')}`\r\n        }\r\n      </h2>\r\n      <div className=\"view-toggle\">\r\n        <button \r\n          className={viewMode === 'month' ? 'active' : ''}\r\n          onClick={() => setViewMode('month')}\r\n        >\r\n          Month\r\n        </button>\r\n        <button \r\n          className={viewMode === 'week' ? 'active' : ''}\r\n          onClick={() => setViewMode('week')}\r\n        >\r\n          Week\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Day names header\r\n  const DayNames = () => (\r\n    <div className=\"day-names\">\r\n      {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\r\n        <div key={day}>{day}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  // Calendar cells\r\n  const CalendarCells = () => {\r\n    const dateRange = getDateRange();\r\n    const monthStart = startOfMonth(currentDate);\r\n\r\n    return (\r\n      <div className=\"calendar-grid\">\r\n        {dateRange.map((day, i) => {\r\n          const dayJobs = getJobsForDate(day);\r\n          const isCurrentMonth = isSameMonth(day, monthStart);\r\n          const isToday = isSameDay(day, new Date());\r\n          const isSelected = isSameDay(day, selectedDate);\r\n\r\n          return (\r\n            <div \r\n              key={i}\r\n              className={`calendar-cell ${isCurrentMonth ? '' : 'other-month'} ${isToday ? 'today' : ''} ${isSelected ? 'selected' : ''}`}\r\n              onClick={() => setSelectedDate(day)}\r\n            >\r\n              <div className=\"day-number\">{format(day, 'd')}</div>\r\n              <div className=\"day-jobs\">\r\n                {dayJobs.slice(0, 2).map(job => (\r\n                  <div \r\n                    key={job.id} \r\n                    className={`job-pill priority-${job.priority.toLowerCase()}`}\r\n                  >\r\n                    {job.component}\r\n                  </div>\r\n                ))}\r\n                {dayJobs.length > 2 && (\r\n                  <div className=\"more-jobs\">+{dayJobs.length - 2} more</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Selected date jobs panel\r\n  const SelectedDateJobs = () => {\r\n    const selectedJobs = getJobsForDate(selectedDate);\r\n\r\n    return (\r\n      <div className=\"selected-jobs\">\r\n        <h3>Jobs for {format(selectedDate, 'MMMM d, yyyy')}</h3>\r\n        {selectedJobs.length > 0 ? (\r\n          <div className=\"job-list\">\r\n            {selectedJobs.map(job => (\r\n              <div key={job.id} className=\"job-card\">\r\n                <div className=\"job-header\">\r\n                  <span className=\"job-type\">{job.type}</span>\r\n                  <span className={`job-priority priority-${job.priority.toLowerCase()}`}>\r\n                    {job.priority}\r\n                  </span>\r\n                </div>\r\n                <div className=\"job-details\">\r\n                  <div><strong>Ship:</strong> {job.ship}</div>\r\n                  <div><strong>Component:</strong> {job.component}</div>\r\n                  <div><strong>Assigned To:</strong> {job.assignedTo}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"no-jobs\">No jobs scheduled for this date</div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"maintenance-calendar\">\r\n      <CalendarHeader />\r\n      <DayNames />\r\n      <CalendarCells />\r\n      <SelectedDateJobs />\r\n    </div>\r\n  );\r\n};\r\n\r\n// CSS Styles (should be in a separate CSS file)\r\nconst styles = `\r\n  .maintenance-calendar {\r\n    max-width: 1000px;\r\n    margin: 0 auto;\r\n    font-family: Arial, sans-serif;\r\n  }\r\n\r\n  .calendar-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .nav-buttons button, .view-toggle button {\r\n    padding: 5px 10px;\r\n    margin-right: 5px;\r\n    border: 1px solid #ddd;\r\n    background: white;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .view-toggle button.active {\r\n    background: #3498db;\r\n    color: white;\r\n    border-color: #3498db;\r\n  }\r\n\r\n  .day-names {\r\n    display: grid;\r\n    grid-template-columns: repeat(7, 1fr);\r\n    text-align: center;\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .calendar-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(7, 1fr);\r\n    gap: 5px;\r\n  }\r\n\r\n  .calendar-cell {\r\n    min-height: 100px;\r\n    padding: 5px;\r\n    border: 1px solid #eee;\r\n    background: white;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .calendar-cell.other-month {\r\n    background: #f9f9f9;\r\n    color: #aaa;\r\n  }\r\n\r\n  .calendar-cell.today {\r\n    border: 2px solid #e74c3c;\r\n  }\r\n\r\n  .calendar-cell.selected {\r\n    background: #e3f2fd;\r\n  }\r\n\r\n  .day-number {\r\n    font-weight: bold;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .job-pill {\r\n    font-size: 12px;\r\n    padding: 2px 5px;\r\n    margin-bottom: 2px;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  .priority-high { background: #f8d7da; color: #721c24; }\r\n  .priority-medium { background: #fff3cd; color: #856404; }\r\n  .priority-low { background: #d4edda; color: #155724; }\r\n\r\n  .more-jobs {\r\n    font-size: 12px;\r\n    color: #3498db;\r\n  }\r\n\r\n  .selected-jobs {\r\n    margin-top: 30px;\r\n    padding-top: 20px;\r\n    border-top: 1px solid #eee;\r\n  }\r\n\r\n  .job-list {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    gap: 15px;\r\n    margin-top: 15px;\r\n  }\r\n\r\n  .job-card {\r\n    padding: 15px;\r\n    border: 1px solid #eee;\r\n    border-radius: 5px;\r\n    background: white;\r\n  }\r\n\r\n  .job-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .job-type {\r\n    font-weight: bold;\r\n  }\r\n\r\n  .no-jobs {\r\n    color: #7f8c8d;\r\n    font-style: italic;\r\n  }\r\n`;\r\n\r\n// Add styles to the document\r\nconst styleElement = document.createElement('style');\r\nstyleElement.textContent = styles;\r\ndocument.head.appendChild(styleElement);\r\n\r\nexport default MaintenanceCalendar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,WAAW,EAAEC,OAAO,EAAEC,YAAY,EAAEC,UAAU,EAAEC,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/H,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,IAAI,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAIiB,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,IAAIiB,IAAI,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,KAAK,GAAGL,QAAQ,KAAK,OAAO,GAC9BhB,WAAW,CAACE,YAAY,CAACW,WAAW,CAAC,CAAC,GACtCb,WAAW,CAACa,WAAW,CAAC;IAE5B,MAAMS,GAAG,GAAGN,QAAQ,KAAK,OAAO,GAC5BZ,SAAS,CAACD,UAAU,CAACU,WAAW,CAAC,CAAC,GAClCT,SAAS,CAACS,WAAW,CAAC;IAE1B,MAAMU,KAAK,GAAG,EAAE;IAChB,IAAIC,UAAU,GAAGH,KAAK;IAEtB,OAAOG,UAAU,IAAIF,GAAG,EAAE;MACxBC,KAAK,CAACE,IAAI,CAACD,UAAU,CAAC;MACtBA,UAAU,GAAGvB,OAAO,CAACuB,UAAU,EAAE,CAAC,CAAC;IACrC;IAEA,OAAOD,KAAK;EACd,CAAC;;EAED;EACA,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7BZ,cAAc,CAACb,OAAO,CAACY,WAAW,EAAEG,QAAQ,KAAK,OAAO,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EACvE,CAAC;EAED,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1Bb,cAAc,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAC1BI,eAAe,CAAC,IAAIJ,IAAI,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzBd,cAAc,CAACb,OAAO,CAACY,WAAW,EAAEG,QAAQ,KAAK,OAAO,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACrE,CAAC;;EAED;EACA,MAAMa,cAAc,GAAIC,IAAI,IAAK;IAC/B,OAAOnB,IAAI,CAACoB,MAAM,CAACC,GAAG,IAAI1B,SAAS,CAACC,QAAQ,CAACyB,GAAG,CAACC,SAAS,CAAC,EAAEH,IAAI,CAAC,CAAC;EACrE,CAAC;;EAED;EACA,MAAMI,cAAc,GAAGA,CAAA,kBACrBzB,OAAA;IAAK0B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B3B,OAAA;MAAK0B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B3B,OAAA;QAAQ4B,OAAO,EAAEX,gBAAiB;QAAAU,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChDhC,OAAA;QAAQ4B,OAAO,EAAEV,aAAc;QAAAS,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9ChC,OAAA;QAAQ4B,OAAO,EAAET,YAAa;QAAAQ,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACNhC,OAAA;MAAA2B,QAAA,EACGpB,QAAQ,KAAK,OAAO,GACjBjB,MAAM,CAACc,WAAW,EAAE,WAAW,CAAC,GAChC,GAAGd,MAAM,CAACC,WAAW,CAACa,WAAW,CAAC,EAAE,OAAO,CAAC,MAAMd,MAAM,CAACK,SAAS,CAACS,WAAW,CAAC,EAAE,aAAa,CAAC;IAAE;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEnG,CAAC,eACLhC,OAAA;MAAK0B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B3B,OAAA;QACE0B,SAAS,EAAEnB,QAAQ,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAG;QAChDqB,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAAC,OAAO,CAAE;QAAAmB,QAAA,EACrC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThC,OAAA;QACE0B,SAAS,EAAEnB,QAAQ,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAG;QAC/CqB,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAAC,MAAM,CAAE;QAAAmB,QAAA,EACpC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;;EAED;EACA,MAAMC,QAAQ,GAAGA,CAAA,kBACfjC,OAAA;IAAK0B,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAACO,GAAG,CAACC,GAAG,iBACxDnC,OAAA;MAAA2B,QAAA,EAAgBQ;IAAG,GAATA,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAC1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CACN;;EAED;EACA,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,SAAS,GAAG1B,YAAY,CAAC,CAAC;IAChC,MAAM2B,UAAU,GAAG7C,YAAY,CAACW,WAAW,CAAC;IAE5C,oBACEJ,OAAA;MAAK0B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BU,SAAS,CAACH,GAAG,CAAC,CAACC,GAAG,EAAEI,CAAC,KAAK;QACzB,MAAMC,OAAO,GAAGpB,cAAc,CAACe,GAAG,CAAC;QACnC,MAAMM,cAAc,GAAG7C,WAAW,CAACuC,GAAG,EAAEG,UAAU,CAAC;QACnD,MAAMI,OAAO,GAAG7C,SAAS,CAACsC,GAAG,EAAE,IAAI7B,IAAI,CAAC,CAAC,CAAC;QAC1C,MAAMqC,UAAU,GAAG9C,SAAS,CAACsC,GAAG,EAAE1B,YAAY,CAAC;QAE/C,oBACET,OAAA;UAEE0B,SAAS,EAAE,iBAAiBe,cAAc,GAAG,EAAE,GAAG,aAAa,IAAIC,OAAO,GAAG,OAAO,GAAG,EAAE,IAAIC,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;UAC5Hf,OAAO,EAAEA,CAAA,KAAMlB,eAAe,CAACyB,GAAG,CAAE;UAAAR,QAAA,gBAEpC3B,OAAA;YAAK0B,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAErC,MAAM,CAAC6C,GAAG,EAAE,GAAG;UAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpDhC,OAAA;YAAK0B,SAAS,EAAC,UAAU;YAAAC,QAAA,GACtBa,OAAO,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACV,GAAG,CAACX,GAAG,iBAC1BvB,OAAA;cAEE0B,SAAS,EAAE,qBAAqBH,GAAG,CAACsB,QAAQ,CAACC,WAAW,CAAC,CAAC,EAAG;cAAAnB,QAAA,EAE5DJ,GAAG,CAACwB;YAAS,GAHTxB,GAAG,CAACyB,EAAE;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIR,CACN,CAAC,EACDQ,OAAO,CAACS,MAAM,GAAG,CAAC,iBACjBjD,OAAA;cAAK0B,SAAS,EAAC,WAAW;cAAAC,QAAA,GAAC,GAAC,EAACa,OAAO,CAACS,MAAM,GAAG,CAAC,EAAC,OAAK;YAAA;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAC3D;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA,GAjBDO,CAAC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBH,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;;EAED;EACA,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,YAAY,GAAG/B,cAAc,CAACX,YAAY,CAAC;IAEjD,oBACET,OAAA;MAAK0B,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B3B,OAAA;QAAA2B,QAAA,GAAI,WAAS,EAACrC,MAAM,CAACmB,YAAY,EAAE,cAAc,CAAC;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACvDmB,YAAY,CAACF,MAAM,GAAG,CAAC,gBACtBjD,OAAA;QAAK0B,SAAS,EAAC,UAAU;QAAAC,QAAA,EACtBwB,YAAY,CAACjB,GAAG,CAACX,GAAG,iBACnBvB,OAAA;UAAkB0B,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACpC3B,OAAA;YAAK0B,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB3B,OAAA;cAAM0B,SAAS,EAAC,UAAU;cAAAC,QAAA,EAAEJ,GAAG,CAAC6B;YAAI;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5ChC,OAAA;cAAM0B,SAAS,EAAE,yBAAyBH,GAAG,CAACsB,QAAQ,CAACC,WAAW,CAAC,CAAC,EAAG;cAAAnB,QAAA,EACpEJ,GAAG,CAACsB;YAAQ;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNhC,OAAA;YAAK0B,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B3B,OAAA;cAAA2B,QAAA,gBAAK3B,OAAA;gBAAA2B,QAAA,EAAQ;cAAK;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACT,GAAG,CAAC8B,IAAI;YAAA;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC5ChC,OAAA;cAAA2B,QAAA,gBAAK3B,OAAA;gBAAA2B,QAAA,EAAQ;cAAU;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACT,GAAG,CAACwB,SAAS;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtDhC,OAAA;cAAA2B,QAAA,gBAAK3B,OAAA;gBAAA2B,QAAA,EAAQ;cAAY;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACT,GAAG,CAAC+B,UAAU;YAAA;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC;QAAA,GAXET,GAAG,CAACyB,EAAE;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYX,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,gBAENhC,OAAA;QAAK0B,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAA+B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAC9D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV,CAAC;EAED,oBACEhC,OAAA;IAAK0B,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnC3B,OAAA,CAACyB,cAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClBhC,OAAA,CAACiC,QAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZhC,OAAA,CAACoC,aAAa;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjBhC,OAAA,CAACkD,gBAAgB;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;;AAED;AAAA7B,EAAA,CAvKMF,mBAAmB;AAAAsD,EAAA,GAAnBtD,mBAAmB;AAwKzB,MAAMuD,MAAM,GAAG;AACfaAAa,CAAC,OAAO,CAAC;AACpDF,YAAY,CAACG,WAAW,GAAGJ,MAAM;AACjCE,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,YAAY,CAAC;AAEvC,eAAexD,mBAAmB;AAAC,IAAAsD,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}