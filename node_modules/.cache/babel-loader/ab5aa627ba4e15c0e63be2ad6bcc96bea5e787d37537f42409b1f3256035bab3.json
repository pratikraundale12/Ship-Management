{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\OneDrive\\\\Desktop\\\\Final\\\\Ship-Management\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Hardcoded users\nconst USERS = [{\n  email: 'admin@example.com',\n  password: 'admin123',\n  role: 'Admin'\n}, {\n  email: 'inspector@example.com',\n  password: 'inspector123',\n  role: 'Inspector'\n}, {\n  email: 'engineer@example.com',\n  password: 'engineer123',\n  role: 'Engineer'\n}];\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n\n  // On mount, check localStorage for user\n  useEffect(() => {\n    const storedUser = localStorage.getItem('shipmgmt_user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const login = (email, password) => {\n    const found = USERS.find(u => u.email === email && u.password === password);\n    if (found) {\n      const userObj = {\n        email: found.email,\n        role: found.role\n      };\n      setUser(userObj);\n      localStorage.setItem('shipmgmt_user', JSON.stringify(userObj));\n      setError(null);\n      return true;\n    } else {\n      setError('Invalid credentials');\n      return false;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('shipmgmt_user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"FoT8xzvemVmWV60BhcL+ltjm2pQ=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n\n// Role-based access control component\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const RequireRole = ({\n  allowedRoles,\n  children\n}) => {\n  _s3();\n  const {\n    user\n  } = useAuth();\n  if (!user || allowedRoles && !allowedRoles.includes(user.role)) {\n    return null;\n  }\n  return children;\n};\n_s3(RequireRole, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n_c2 = RequireRole;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthProvider\");\n$RefreshReg$(_c2, \"RequireRole\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","USERS","email","password","role","AuthProvider","children","_s","user","setUser","error","setError","storedUser","localStorage","getItem","JSON","parse","login","found","find","u","userObj","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","RequireRole","allowedRoles","_s3","includes","_c2","$RefreshReg$"],"sources":["C:/Users/prati/OneDrive/Desktop/Final/Ship-Management/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\n// Hardcoded users\r\nconst USERS = [\r\n  { email: 'admin@example.com', password: 'admin123', role: 'Admin' },\r\n  { email: 'inspector@example.com', password: 'inspector123', role: 'Inspector' },\r\n  { email: 'engineer@example.com', password: 'engineer123', role: 'Engineer' },\r\n];\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // On mount, check localStorage for user\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('shipmgmt_user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  const login = (email, password) => {\r\n    const found = USERS.find(u => u.email === email && u.password === password);\r\n    if (found) {\r\n      const userObj = { email: found.email, role: found.role };\r\n      setUser(userObj);\r\n      localStorage.setItem('shipmgmt_user', JSON.stringify(userObj));\r\n      setError(null);\r\n      return true;\r\n    } else {\r\n      setError('Invalid credentials');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('shipmgmt_user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, error }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// Role-based access control component\r\nexport const RequireRole = ({ allowedRoles, children }) => {\r\n  const { user } = useAuth();\r\n  if (!user || (allowedRoles && !allowedRoles.includes(user.role))) {\r\n    return null;\r\n  }\r\n  return children;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}