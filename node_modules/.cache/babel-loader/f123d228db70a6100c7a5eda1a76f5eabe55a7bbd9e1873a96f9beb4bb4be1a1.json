{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\OneDrive\\\\Desktop\\\\Assignment_ENTNT\\\\src\\\\components\\\\Notifications\\\\NotificationCenter.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationCenter = () => {\n  _s();\n  const [notifications, setNotifications] = React.useState([]);\n  const markAsRead = id => {\n    setNotifications(prev => prev.map(notification => notification.id === id ? {\n      ...notification,\n      read: true\n    } : notification));\n  };\n  const deleteNotification = id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-list\",\n      children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `notification ${notification.read ? 'read' : 'unread'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: notification.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: notification.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-actions\",\n          children: [!notification.read && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => markAsRead(notification.id),\n            children: \"Mark as Read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteNotification(notification.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, notification.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationCenter, \"/HH3zTd3BUNOgnlhD79kguSWbWM=\");\n_c = NotificationCenter;\nexport default NotificationCenter;\nvar _c;\n$RefreshReg$(_c, \"NotificationCenter\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NotificationCenter","_s","notifications","setNotifications","useState","markAsRead","id","prev","map","notification","read","deleteNotification","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","title","message","timestamp","onClick","_c","$RefreshReg$"],"sources":["C:/Users/prati/OneDrive/Desktop/Assignment_ENTNT/src/components/Notifications/NotificationCenter.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst NotificationCenter = () => {\r\n  const [notifications, setNotifications] = React.useState([]);\r\n\r\n  const markAsRead = (id) => {\r\n    setNotifications(prev =>\r\n      prev.map(notification =>\r\n        notification.id === id\r\n          ? { ...notification, read: true }\r\n          : notification\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteNotification = (id) => {\r\n    setNotifications(prev =>\r\n      prev.filter(notification => notification.id !== id)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-center\">\r\n      <h2>Notifications</h2>\r\n      <div className=\"notifications-list\">\r\n        {notifications.length === 0 ? (\r\n          <p>No notifications</p>\r\n        ) : (\r\n          notifications.map(notification => (\r\n            <div\r\n              key={notification.id}\r\n              className={`notification ${notification.read ? 'read' : 'unread'}`}\r\n            >\r\n              <div className=\"notification-content\">\r\n                <h4>{notification.title}</h4>\r\n                <p>{notification.message}</p>\r\n                <small>{notification.timestamp}</small>\r\n              </div>\r\n              <div className=\"notification-actions\">\r\n                {!notification.read && (\r\n                  <button onClick={() => markAsRead(notification.id)}>\r\n                    Mark as Read\r\n                  </button>\r\n                )}\r\n                <button onClick={() => deleteNotification(notification.id)}>\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationCenter; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}